version: "3.9"

##############################################
############## Core Services #################
##############################################
services:
  config-server:
    build:
      context: .
      dockerfile: Dockerfile.config-server
    container_name: config-server
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-I", "http://config-server:8888"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8888:8888
    networks:
      - microservices-net

  discovery-service:
    build:
      context: .
      dockerfile: Dockerfile.discovery-service
    container_name: discovery-service
    restart: unless-stopped
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-service:8761"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - 8761:8761
    networks:
      - microservices-net

  service-a:
    build:
      context: .
      dockerfile: Dockerfile.service-a
    container_name: service-a
    restart: unless-stopped
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://service-a:8081/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    ports:
      - 8081:8081
    networks:
      - microservices-net

  service-b:
    build:
      context: .
      dockerfile: Dockerfile.service-b
    container_name: service-b
    restart: unless-stopped
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://service-b:8082/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    ports:
      - 8082:8082
    networks:
      - microservices-net

  gateway-service:
    build:
      context: .
      dockerfile: Dockerfile.gateway-service
    container_name: gateway-service
    restart: unless-stopped
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://gateway-service:8989/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      service-a:
        condition: service_healthy
      service-b:
        condition: service_healthy
    ports:
      - 8989:8989
    networks:
      - microservices-net

  ##############################################
  ############## Security with keycloak ########
  ##############################################

  keycloak_web:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: keycloak_web
    command: ["start-dev"]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KC_HOSTNAME: keycloak_web
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak_web:7080/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "7080:7080"
    depends_on:
      - keycloakdb
    networks:
      - microservices-net

  keycloakdb:
    image: postgres:15.6
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - microservices-net

##############################################
##############################################

networks:
  microservices-net:
    driver: bridge
